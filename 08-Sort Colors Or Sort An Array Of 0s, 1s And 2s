//Bruteforce Approach

class Solution {
    public void sortColors(int[] arr) {
        int count0 = 0, count1 = 0;

        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 0) {
                count0++;
            } else if (arr[i] == 1) {
                count1++;
            }
        }

        Arrays.fill(arr, 0, count0, 0);
        Arrays.fill(arr, count0, count0 + count1, 1);
        Arrays.fill(arr, count0 + count1, arr.length, 2);
    }
}

// Optimal Approach (Dutch National Flag Algorithm)

class Solution {
    public void sortColors(int[] arr) {
        int p0 = 0, i = 0, p2 = (arr.length - 1);

        while (i <= p2) {
            if (arr[i] == 0) {
                swap(arr, p0, i);
                p0++;
                i++;
            } else if (arr[i] == 2) {
                swap(arr, i, p2);
                p2--;
            } else if (arr[i] == 1) {
                i++;
            }
        }
    }

    private void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
