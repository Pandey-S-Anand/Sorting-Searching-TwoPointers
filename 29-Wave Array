//Logic: Every odd indexed element should be smaller than it's immediate neighbours

class Solution {
    public void convertToWave(int[] arr) {
        for (int i = 1; i < arr.length; i += 2) {
            if (i > 0 && arr[i] > arr[i - 1]) {
                swap(arr, i, i - 1);
            }

            if (i < (n - 1) && arr[i] > arr[i + 1]) {
                swap(arr, i, i + 1);
            }
        }
    }

    private void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}

// Aliter
// Logic: Every even indexed element should be greater than it's immediate neighbours

class Solution {
    public void convertToWave(int[] arr) {
        for (int i = 0; i <  arr.length; i += 2) {
            if (i > 0 && arr[i] < arr[i - 1]) {
                swap(arr, i, i - 1);
            }

            if (i < (n - 1) && arr[i] < arr[i + 1]) {
                swap(arr, i, i + 1);
            }
        }
    }

    private void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
