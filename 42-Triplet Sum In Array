//Bruteforce Approach

class Solution {
    public boolean find3Numbers(int arr[], int n, int target) {
        for (int i = 0; i < n - 2; i++) {
            for (int j = i + 1; j < n - 1; j++) {
                for (int k = j + 1; k < n; k++) {
                    if ((arr[i] + arr[j] + arr[k]) == target) {
                        return true;
                    }
                }
            }
        }

        return false;
    }
}



//Optimal Approach

class Solution {
    public boolean find3Numbers(int arr[], int n, int target) {
        Arrays.sort(arr);

        for (int i = 0; i < n - 2; i++) {
            int j = i + 1;
            int k = n - 1;

            while (j < k) {
                int currSum = (arr[i] + arr[j] + arr[k]);
                if (currSum == target) {
                    return true;
                } else if (currSum < target) {
                    j++;
                } else { // (currSum>target)
                    k--;
                }
            }
        }

        return false;
    }
}
