// Using Extra Space

class Solution {
    public int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
        int[] vacancy = new int[capacity.length];

        for (int i = 0; i < capacity.length; i++) {
            vacancy[i] = capacity[i] - rocks[i];
        }

        Arrays.sort(vacancy); // To maximise the filled bag count
        int filledBags = 0;

        for (int i = 0; (i < vacancy.length && additionalRocks >= vacancy[i]); i++) {
            additionalRocks -= vacancy[i];
            filledBags++;
        }

        return filledBags;
    }
}


// Without using Extra Space

class Solution {
    public int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
        for (int i = 0; i < capacity.length; i++) {
            capacity[i] = capacity[i] - rocks[i];
        }

        Arrays.sort(capacity); // To maximise the filled bag count
        int filledBags = 0;

        for (int i = 0; (i < capacity.length && additionalRocks >= capacity[i]); i++) {
            additionalRocks -= capacity[i];
            filledBags++;
        }

        return filledBags;
    }
}
