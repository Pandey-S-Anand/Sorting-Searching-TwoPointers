// Bruteforce Approach

class Solution {
    public String arrangeWords(String text) {
        Map<Integer, List<String>> lengthToWordsMap = new TreeMap<>();
        StringBuilder arrangedWords = new StringBuilder();

        String[] words = text.split(" ");

        for (String word : words) {
            lengthToWordsMap.computeIfAbsent(word.length(), k -> new ArrayList<>()).add(word);
        }

        for (int wordLength : lengthToWordsMap.keySet()) {
            for (String word : lengthToWordsMap.get(wordLength)) {
                arrangedWords.append(word.toLowerCase()).append(" ");
            }
        }

        arrangedWords.deleteCharAt(arrangedWords.length() - 1); // Remove last space
        arrangedWords.setCharAt(0, Character.toUpperCase(arrangedWords.charAt(0))); // Capitalize first letter

        return arrangedWords.toString();
    }
}

// Optimal Approach

class Solution {
    public String arrangeWords(String text) {
        StringBuilder arrangedWords = new StringBuilder();
        String[] words = text.split(" ");

        Arrays.sort(words, (str1, str2) -> str1.length() - str2.length());

        for (String word : words) {
            arrangedWords.append(word.toLowerCase()).append(" ");
        }

        arrangedWords.deleteCharAt(arrangedWords.length() - 1); // Remove last space
        arrangedWords.setCharAt(0, Character.toUpperCase(arrangedWords.charAt(0))); // Capitalize first letter

        return arrangedWords.toString();
    }
}
