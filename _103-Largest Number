//Bruteforce Implementation

class Solution {
    public String largestNumber(int[] arr) {
        String[] strArr = new String[arr.length];

        for (int i = 0; i < arr.length; i++) {
            strArr[i] = Integer.toString(arr[i]);
        }

        Arrays.sort(strArr, new comparator());

        StringBuilder result = new StringBuilder();

        for (String num : strArr) {
            result.append(num);
        }

        if (result.charAt(0) == '0') {
            return "0";
        }

        return result.toString();
    }
}

class comparator implements Comparator<String> {
    public int compare(String s1, String s2) {
        int res = s1.concat(s2).compareTo(s2.concat(s1)); // int res=(s1+s2).compareTo(s2+s1)

        if (res < 0) {
            return 1;
        } else if (res > 0) {
            return -1;
        } else {
            return 0;
        }
    }
}

// Better Implementation

class Solution {
    public String largestNumber(int[] arr) {
        String[] strArr = new String[arr.length];

        for (int i = 0; i < arr.length; i++) {
            strArr[i] = Integer.toString(arr[i]);
        }

        Arrays.sort(strArr, new comparator());

        StringBuilder result = new StringBuilder();

        for (String num : strArr) {
            result.append(num);
        }

        if (result.charAt(0) == '0') {
            return "0";
        }

        return result.toString();
    }
}

class comparator implements Comparator<String> {
    public int compare(String s1, String s2) {
        return s2.concat(s1).compareTo(s1.concat(s2)); // return (s2+s1).compareTo(s1+s2)
    }
}

// Optimal Implementation

class Solution {
    public String largestNumber(int[] arr) {
        String[] strArr = new String[arr.length];

        for (int i = 0; i < arr.length; i++) {
            strArr[i] = Integer.toString(arr[i]);
        }

        Arrays.sort(strArr, (s1, s2) -> s2.concat(s1).compareTo(s1.concat(s2)));
        // Aliter: Arrays.sort(strArr,(s1,s2) -> (s2+s1).compareTo(s1+s2));

        StringBuilder result = new StringBuilder();

        for (String num : strArr) {
            result.append(num);
        }

        if (result.charAt(0) == '0') {
            return "0";
        }

        return result.toString();
    }
}
