class Solution {
    static int checkCompressed(String normal, String compressed) {
        int i = 0, j = 0;

        while (i < normal.length() && j < compressed.length()) {

            // If current character in compressed is a letter
            if (Character.isLetter(compressed.charAt(j))) {
                // It must match the corresponding character in normal
                if (compressed.charAt(j) != normal.charAt(i)) {
                    return 0; // Mismatch
                }
                i++; // move both pointers
                j++;
            } else {
                // Character in compressed is a digit: start building the skip count
                int deletedCount = 0;

                while (j < compressed.length() && Character.isDigit(compressed.charAt(j))) {
                    deletedCount = deletedCount * 10 + (compressed.charAt(j) - '0');
                    j++; // move to next character
                }

                i += deletedCount; // skip 'deletedCount' characters in normal
            }
        }

        // Both strings must be fully traversed
        return (i == normal.length() && j == compressed.length()) ? 1 : 0;
    }
}
