class Solution {
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        /*
          The minimum absolute difference between any two elements in an array
          will always occur between two adjacent elements in the sorted array.
        */
        Arrays.sort(arr);  // Sort the array in ascending order

        // Step 1: Find the minimum absolute difference between any two adjacent elements
        int minAbsDiff = findMinAbsDiff(arr);

        // Step 2: Collect all pairs having the minimum absolute difference
        List<List<Integer>> pairs = new ArrayList<>();
        for (int i = 1; i < arr.length; i++) {
            // If the current pair has the minimum absolute difference, add it to the result
            if ((arr[i] - arr[i - 1]) == minAbsDiff) {
                pairs.add(List.of(arr[i - 1], arr[i]));
            }
        }

        return pairs;
    }

    private int findMinAbsDiff(int[] arr) {
        int minAbsDiff = Integer.MAX_VALUE;

        for (int i = 1; i < arr.length; i++) {
            int diff = arr[i] - arr[i - 1];
            minAbsDiff = Math.min(minAbsDiff, diff);
        }

        return minAbsDiff;
    }
}
