//Bruteforce Approach

class Solution {
    public String reverseWords(String str) {
        String[] words = str.trim().split("\\s+"); 

        StringBuilder reversedWords = new StringBuilder();

        for (int i = words.length - 1; i > 0; i--) {
            reversedWords.append(words[i]).append(" ");
        }

        reversedWords.append(words[0]);

        return reversedWords.toString();
    }
}



// Optimal Approach
    
class Solution {
    public static String reverseWords(String str) {
        str = str.trim(); //The input string s is trimmed to remove any leading or trailing spaces using the trim() method
        StringBuilder reversedWords = new StringBuilder();
        int i = str.length() - 1, wordEndIndex = i;

        while (i >= 0) {
            while (i >= 0 && str.charAt(i) != ' ') {
                i--;
            }

            // copy word
            reversedWords.append(str.substring(i + 1, wordEndIndex + 1)).append(' ');

            // remove excess whitespaces
            while (i >= 0 && str.charAt(i) == ' ') {
                i--;
            }

            wordEndIndex = i;
        }

        // remove the extra white space at the end
        reversedWords.deleteCharAt(reversedWords.length() - 1);

        return reversedWords.toString();
    }
}
