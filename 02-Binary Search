//Iterative Approach

class Solution {
    public int search(int[] arr, int target) {
      int low=0,high=arr.length-1;

      while(low<=high){
          int mid=low+(high-low)/2;

          if(arr[mid]==target){
            return mid; //target is found at index 'mid' in the given array
          }else if(target<arr[mid]){
            high=mid-1;
          }else if(target>arr[mid]){
            low=mid+1;
          }
      }

      return -1; //target doesnot exists in the given array
    }
}


//Recursive Approach

class Solution {
    public int search(int[] arr, int target) {
        return search(arr, target, 0, arr.length - 1);
    }

    public int search(int[] arr, int target, int low, int high) {
        if (low > high) {
            return -1;
        }

        int mid = low + (high - low) / 2;

        if (arr[mid] == target) {
            return mid; // target is found at index 'mid' in the given array
        } else if (target < arr[mid]) {
            return search(arr, target, low, mid - 1);
        } else {
            return search(arr, target, mid + 1, high);
        }
    }
}
