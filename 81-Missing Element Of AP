/*
To calculate the common difference (d) of an arithmetic progression (AP) when you have 
the first term (a), the last term (l), and the total number of terms (n), 
you can use the following formula:

Common difference (d) = (l - a) / (n - 1) 


When an element is missing from an arithmetic progression (AP), 
the correct common difference can be calculated using the following formula:

Common difference (d) = (l - a) / (n - 1 + 1)  = (l - a) / n
*/

//Bruteforce Approach

class Solution {
    int findMissing(int[] arr, int n) {
        int commonDifference = (arr[n - 1] - arr[0]) / n;

        for (int i = 1; i < n; i++) {
            if (arr[i] != (arr[i - 1] + commonDifference)) {
                return (arr[i - 1] + commonDifference);
            }
        }

        // This return statement will never be reached
        return -1;
    }
}

// Optimal Approach

class Solution {
    int findMissing(int[] arr, int n) {
        int actualCommonDifference = (arr[n - 1] - arr[0]) / n;
        int low = 0, high = n - 1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            // Check if the element at mid-1 + actualCommonDifference equals the element at mid
            if (mid > 0 && (arr[mid] != (arr[mid - 1] + actualCommonDifference))) {
                return arr[mid - 1] + actualCommonDifference;
            }

            // Calculate the expected element at mid position
            /*
             * nth Term of AP= firstTerm + (n - 1) * commonDifference
             * Thus expectedElementAtMid= arr[0] + mid * actualCommonDifference;
             * Note : n is position and mid is index and
             * index = position -1(Given that the array indices are zero-based)
             * so n-1 = mid
             */
            int expectedElementAtMid = arr[0] + mid * actualCommonDifference;

            if (arr[mid] == expectedElementAtMid) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }

        // This return statement will never be reached because the AP is guaranteed to have one missing term
        return -1;
    }
}
