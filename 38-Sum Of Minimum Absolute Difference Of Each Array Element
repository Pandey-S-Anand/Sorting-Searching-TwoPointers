//Bruteforce Approach

class Solution {
    long sumOfMinAbsDifferences(long arr[], int n) {
        long sum = 0;
        for (int i = 0; i < n; i++) {
            long min = Long.MAX_VALUE;
            for (int j = 0; j < n; j++) {
                if (i != j && Math.abs(arr[i] - arr[j]) < min) {
                    min = Math.abs(arr[i] - arr[j]);
                }
            }

            sum += min;
        }

        return sum;
    }
}


//Optimal Approach

class Solution {
    long sumOfMinAbsDifferences(long arr[], int n) {
        Arrays.sort(arr);
        long sum = 0;

        sum += Math.abs(arr[0] - arr[1]);

        for (int i = 1; i < (n - 1); i++) {
            sum += Math.min(Math.abs(arr[i] - arr[i - 1]), Math.abs(arr[i] - arr[i + 1]));
        }

        sum += Math.abs(arr[n - 1] - arr[n - 2]);

        return sum;
    }
}
